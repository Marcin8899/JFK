# Generated from JFKProjekt.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,24,155,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,1,0,1,0,1,1,1,1,1,2,1,
        2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,
        7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,
        1,10,1,10,1,11,4,11,90,8,11,11,11,12,11,91,1,12,1,12,5,12,96,8,12,
        10,12,12,12,99,9,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,4,14,108,
        8,14,11,14,12,14,109,1,14,1,14,4,14,114,8,14,11,14,12,14,115,1,15,
        4,15,119,8,15,11,15,12,15,120,1,16,1,16,1,17,1,17,1,18,1,18,1,19,
        1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,22,3,22,145,8,22,1,22,1,22,1,23,4,23,150,8,23,11,23,12,23,
        151,1,23,1,23,0,0,24,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
        10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,
        21,43,22,45,23,47,24,1,0,3,2,0,65,90,97,122,2,0,34,34,92,92,3,0,
        9,10,13,13,32,32,161,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,
        0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,
        0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,
        0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,
        0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,
        0,0,1,49,1,0,0,0,3,51,1,0,0,0,5,53,1,0,0,0,7,55,1,0,0,0,9,57,1,0,
        0,0,11,59,1,0,0,0,13,61,1,0,0,0,15,65,1,0,0,0,17,72,1,0,0,0,19,77,
        1,0,0,0,21,83,1,0,0,0,23,89,1,0,0,0,25,93,1,0,0,0,27,102,1,0,0,0,
        29,107,1,0,0,0,31,118,1,0,0,0,33,122,1,0,0,0,35,124,1,0,0,0,37,126,
        1,0,0,0,39,128,1,0,0,0,41,130,1,0,0,0,43,136,1,0,0,0,45,144,1,0,
        0,0,47,149,1,0,0,0,49,50,5,61,0,0,50,2,1,0,0,0,51,52,5,91,0,0,52,
        4,1,0,0,0,53,54,5,44,0,0,54,6,1,0,0,0,55,56,5,93,0,0,56,8,1,0,0,
        0,57,58,5,40,0,0,58,10,1,0,0,0,59,60,5,41,0,0,60,12,1,0,0,0,61,62,
        5,105,0,0,62,63,5,51,0,0,63,64,5,50,0,0,64,14,1,0,0,0,65,66,5,100,
        0,0,66,67,5,111,0,0,67,68,5,117,0,0,68,69,5,98,0,0,69,70,5,108,0,
        0,70,71,5,101,0,0,71,16,1,0,0,0,72,73,5,99,0,0,73,74,5,104,0,0,74,
        75,5,97,0,0,75,76,5,114,0,0,76,18,1,0,0,0,77,78,5,112,0,0,78,79,
        5,114,0,0,79,80,5,105,0,0,80,81,5,110,0,0,81,82,5,116,0,0,82,20,
        1,0,0,0,83,84,5,114,0,0,84,85,5,101,0,0,85,86,5,97,0,0,86,87,5,100,
        0,0,87,22,1,0,0,0,88,90,7,0,0,0,89,88,1,0,0,0,90,91,1,0,0,0,91,89,
        1,0,0,0,91,92,1,0,0,0,92,24,1,0,0,0,93,97,5,34,0,0,94,96,8,1,0,0,
        95,94,1,0,0,0,96,99,1,0,0,0,97,95,1,0,0,0,97,98,1,0,0,0,98,100,1,
        0,0,0,99,97,1,0,0,0,100,101,5,34,0,0,101,26,1,0,0,0,102,103,5,34,
        0,0,103,104,8,1,0,0,104,105,5,34,0,0,105,28,1,0,0,0,106,108,2,48,
        57,0,107,106,1,0,0,0,108,109,1,0,0,0,109,107,1,0,0,0,109,110,1,0,
        0,0,110,111,1,0,0,0,111,113,5,46,0,0,112,114,2,48,57,0,113,112,1,
        0,0,0,114,115,1,0,0,0,115,113,1,0,0,0,115,116,1,0,0,0,116,30,1,0,
        0,0,117,119,2,48,57,0,118,117,1,0,0,0,119,120,1,0,0,0,120,118,1,
        0,0,0,120,121,1,0,0,0,121,32,1,0,0,0,122,123,5,43,0,0,123,34,1,0,
        0,0,124,125,5,45,0,0,125,36,1,0,0,0,126,127,5,42,0,0,127,38,1,0,
        0,0,128,129,5,47,0,0,129,40,1,0,0,0,130,131,5,40,0,0,131,132,5,105,
        0,0,132,133,5,110,0,0,133,134,5,116,0,0,134,135,5,41,0,0,135,42,
        1,0,0,0,136,137,5,40,0,0,137,138,5,114,0,0,138,139,5,101,0,0,139,
        140,5,97,0,0,140,141,5,108,0,0,141,142,5,41,0,0,142,44,1,0,0,0,143,
        145,5,13,0,0,144,143,1,0,0,0,144,145,1,0,0,0,145,146,1,0,0,0,146,
        147,5,10,0,0,147,46,1,0,0,0,148,150,7,2,0,0,149,148,1,0,0,0,150,
        151,1,0,0,0,151,149,1,0,0,0,151,152,1,0,0,0,152,153,1,0,0,0,153,
        154,6,23,0,0,154,48,1,0,0,0,8,0,91,97,109,115,120,144,151,1,6,0,
        0
    ]

class JFKProjektLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    PRINT = 10
    READ = 11
    ID = 12
    STRING = 13
    CHAR = 14
    REAL = 15
    INT = 16
    ADD = 17
    MINUS = 18
    MULTIPLY = 19
    DIVIDE = 20
    TOINT = 21
    TOREAL = 22
    NEWLINE = 23
    WS = 24

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "'['", "','", "']'", "'('", "')'", "'i32'", "'double'", 
            "'char'", "'print'", "'read'", "'+'", "'-'", "'*'", "'/'", "'(int)'", 
            "'(real)'" ]

    symbolicNames = [ "<INVALID>",
            "PRINT", "READ", "ID", "STRING", "CHAR", "REAL", "INT", "ADD", 
            "MINUS", "MULTIPLY", "DIVIDE", "TOINT", "TOREAL", "NEWLINE", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "PRINT", "READ", "ID", "STRING", "CHAR", 
                  "REAL", "INT", "ADD", "MINUS", "MULTIPLY", "DIVIDE", "TOINT", 
                  "TOREAL", "NEWLINE", "WS" ]

    grammarFileName = "JFKProjekt.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


