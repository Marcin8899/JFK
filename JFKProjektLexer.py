# Generated from JFKProjekt.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,36,229,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,
        1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,
        1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,
        13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,
        16,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,
        19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,
        21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,4,
        23,164,8,23,11,23,12,23,165,1,24,1,24,5,24,170,8,24,10,24,12,24,
        173,9,24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,4,26,182,8,26,11,26,
        12,26,183,1,26,1,26,4,26,188,8,26,11,26,12,26,189,1,27,4,27,193,
        8,27,11,27,12,27,194,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,
        1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,
        3,34,219,8,34,1,34,1,34,1,35,4,35,224,8,35,11,35,12,35,225,1,35,
        1,35,0,0,36,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,
        23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,
        45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,
        67,34,69,35,71,36,1,0,3,2,0,65,90,97,122,2,0,34,34,92,92,2,0,9,9,
        32,32,235,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
        0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
        0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,
        0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,
        0,0,0,0,71,1,0,0,0,1,73,1,0,0,0,3,75,1,0,0,0,5,77,1,0,0,0,7,79,1,
        0,0,0,9,81,1,0,0,0,11,83,1,0,0,0,13,85,1,0,0,0,15,89,1,0,0,0,17,
        96,1,0,0,0,19,101,1,0,0,0,21,104,1,0,0,0,23,106,1,0,0,0,25,109,1,
        0,0,0,27,111,1,0,0,0,29,114,1,0,0,0,31,117,1,0,0,0,33,123,1,0,0,
        0,35,128,1,0,0,0,37,131,1,0,0,0,39,136,1,0,0,0,41,140,1,0,0,0,43,
        146,1,0,0,0,45,155,1,0,0,0,47,163,1,0,0,0,49,167,1,0,0,0,51,176,
        1,0,0,0,53,181,1,0,0,0,55,192,1,0,0,0,57,196,1,0,0,0,59,198,1,0,
        0,0,61,200,1,0,0,0,63,202,1,0,0,0,65,204,1,0,0,0,67,210,1,0,0,0,
        69,218,1,0,0,0,71,223,1,0,0,0,73,74,5,61,0,0,74,2,1,0,0,0,75,76,
        5,91,0,0,76,4,1,0,0,0,77,78,5,44,0,0,78,6,1,0,0,0,79,80,5,93,0,0,
        80,8,1,0,0,0,81,82,5,40,0,0,82,10,1,0,0,0,83,84,5,41,0,0,84,12,1,
        0,0,0,85,86,5,105,0,0,86,87,5,51,0,0,87,88,5,50,0,0,88,14,1,0,0,
        0,89,90,5,100,0,0,90,91,5,111,0,0,91,92,5,117,0,0,92,93,5,98,0,0,
        93,94,5,108,0,0,94,95,5,101,0,0,95,16,1,0,0,0,96,97,5,99,0,0,97,
        98,5,104,0,0,98,99,5,97,0,0,99,100,5,114,0,0,100,18,1,0,0,0,101,
        102,5,61,0,0,102,103,5,61,0,0,103,20,1,0,0,0,104,105,5,62,0,0,105,
        22,1,0,0,0,106,107,5,62,0,0,107,108,5,61,0,0,108,24,1,0,0,0,109,
        110,5,60,0,0,110,26,1,0,0,0,111,112,5,60,0,0,112,113,5,61,0,0,113,
        28,1,0,0,0,114,115,5,33,0,0,115,116,5,61,0,0,116,30,1,0,0,0,117,
        118,5,112,0,0,118,119,5,114,0,0,119,120,5,105,0,0,120,121,5,110,
        0,0,121,122,5,116,0,0,122,32,1,0,0,0,123,124,5,114,0,0,124,125,5,
        101,0,0,125,126,5,97,0,0,126,127,5,100,0,0,127,34,1,0,0,0,128,129,
        5,105,0,0,129,130,5,102,0,0,130,36,1,0,0,0,131,132,5,116,0,0,132,
        133,5,104,0,0,133,134,5,101,0,0,134,135,5,110,0,0,135,38,1,0,0,0,
        136,137,5,101,0,0,137,138,5,110,0,0,138,139,5,100,0,0,139,40,1,0,
        0,0,140,141,5,119,0,0,141,142,5,104,0,0,142,143,5,105,0,0,143,144,
        5,108,0,0,144,145,5,101,0,0,145,42,1,0,0,0,146,147,5,102,0,0,147,
        148,5,117,0,0,148,149,5,110,0,0,149,150,5,99,0,0,150,151,5,116,0,
        0,151,152,5,105,0,0,152,153,5,111,0,0,153,154,5,110,0,0,154,44,1,
        0,0,0,155,156,5,103,0,0,156,157,5,108,0,0,157,158,5,111,0,0,158,
        159,5,98,0,0,159,160,5,97,0,0,160,161,5,108,0,0,161,46,1,0,0,0,162,
        164,7,0,0,0,163,162,1,0,0,0,164,165,1,0,0,0,165,163,1,0,0,0,165,
        166,1,0,0,0,166,48,1,0,0,0,167,171,5,34,0,0,168,170,8,1,0,0,169,
        168,1,0,0,0,170,173,1,0,0,0,171,169,1,0,0,0,171,172,1,0,0,0,172,
        174,1,0,0,0,173,171,1,0,0,0,174,175,5,34,0,0,175,50,1,0,0,0,176,
        177,5,34,0,0,177,178,8,1,0,0,178,179,5,34,0,0,179,52,1,0,0,0,180,
        182,2,48,57,0,181,180,1,0,0,0,182,183,1,0,0,0,183,181,1,0,0,0,183,
        184,1,0,0,0,184,185,1,0,0,0,185,187,5,46,0,0,186,188,2,48,57,0,187,
        186,1,0,0,0,188,189,1,0,0,0,189,187,1,0,0,0,189,190,1,0,0,0,190,
        54,1,0,0,0,191,193,2,48,57,0,192,191,1,0,0,0,193,194,1,0,0,0,194,
        192,1,0,0,0,194,195,1,0,0,0,195,56,1,0,0,0,196,197,5,43,0,0,197,
        58,1,0,0,0,198,199,5,45,0,0,199,60,1,0,0,0,200,201,5,42,0,0,201,
        62,1,0,0,0,202,203,5,47,0,0,203,64,1,0,0,0,204,205,5,40,0,0,205,
        206,5,105,0,0,206,207,5,110,0,0,207,208,5,116,0,0,208,209,5,41,0,
        0,209,66,1,0,0,0,210,211,5,40,0,0,211,212,5,114,0,0,212,213,5,101,
        0,0,213,214,5,97,0,0,214,215,5,108,0,0,215,216,5,41,0,0,216,68,1,
        0,0,0,217,219,5,13,0,0,218,217,1,0,0,0,218,219,1,0,0,0,219,220,1,
        0,0,0,220,221,5,10,0,0,221,70,1,0,0,0,222,224,7,2,0,0,223,222,1,
        0,0,0,224,225,1,0,0,0,225,223,1,0,0,0,225,226,1,0,0,0,226,227,1,
        0,0,0,227,228,6,35,0,0,228,72,1,0,0,0,8,0,165,171,183,189,194,218,
        225,1,6,0,0
    ]

class JFKProjektLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    EQUAL = 10
    GREATER = 11
    GREATER_EQUAL = 12
    LESS = 13
    LESS_EQUAL = 14
    DIFFERENT = 15
    PRINT = 16
    READ = 17
    IF = 18
    THEN = 19
    END = 20
    WHILE = 21
    FUNCTION = 22
    GLOBAL = 23
    ID = 24
    STRING = 25
    CHAR = 26
    REAL = 27
    INT = 28
    ADD = 29
    MINUS = 30
    MULTIPLY = 31
    DIVIDE = 32
    TOINT = 33
    TOREAL = 34
    NEWLINE = 35
    WS = 36

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "'['", "','", "']'", "'('", "')'", "'i32'", "'double'", 
            "'char'", "'=='", "'>'", "'>='", "'<'", "'<='", "'!='", "'print'", 
            "'read'", "'if'", "'then'", "'end'", "'while'", "'function'", 
            "'global'", "'+'", "'-'", "'*'", "'/'", "'(int)'", "'(real)'" ]

    symbolicNames = [ "<INVALID>",
            "EQUAL", "GREATER", "GREATER_EQUAL", "LESS", "LESS_EQUAL", "DIFFERENT", 
            "PRINT", "READ", "IF", "THEN", "END", "WHILE", "FUNCTION", "GLOBAL", 
            "ID", "STRING", "CHAR", "REAL", "INT", "ADD", "MINUS", "MULTIPLY", 
            "DIVIDE", "TOINT", "TOREAL", "NEWLINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "EQUAL", "GREATER", "GREATER_EQUAL", "LESS", 
                  "LESS_EQUAL", "DIFFERENT", "PRINT", "READ", "IF", "THEN", 
                  "END", "WHILE", "FUNCTION", "GLOBAL", "ID", "STRING", 
                  "CHAR", "REAL", "INT", "ADD", "MINUS", "MULTIPLY", "DIVIDE", 
                  "TOINT", "TOREAL", "NEWLINE", "WS" ]

    grammarFileName = "JFKProjekt.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


